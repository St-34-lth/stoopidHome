# Base image
FROM ros:noetic-robot

# Copy necessary files to the container

COPY system_packages.txt additional_ros_packages.txt test_reqs.txt ros_entrypoint.sh yolov8n.pt yolov8n-pose.pt yolov8n-seg.pt yolov8s.pt ./project_files/root/ /root/


SHELL ["/bin/bash", "-c"]

# Install system packages and wget
RUN apt-get update && \
    xargs -a /root/system_packages.txt apt-get install -y --no-install-recommends && \
    rm -rf /var/lib/apt/lists/* /root/system_packages.txt


# Add FNM to the path explicitly
RUN  curl -fsSL https://fnm.vercel.app/install | bash -s -- --install-dir "/root/.fnm" --skip-shell && \  
    export PATH="/root/.fnm/:$PATH" && \
    eval "$(/root/.fnm/fnm env --use-on-cd --shell bash)" && \
    fnm install 20 && \
    fnm use 20

ENV PATH="/root/.fnm/:${PATH}" 
ENV DISPLAY=:100
ENV EDITOR=nano
# Add ROS package sources and keys
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list' && \
    wget -qO - https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -

# Install additional ROS packages
RUN apt-get update && \
    xargs -a /root/additional_ros_packages.txt apt-get install -y --no-install-recommends && \
    sudo rosdep fix-permissions && \
    rosdep update && \
    rosdep install --from-paths /root/rosenv/src --ignore-src -r -y && \
    rm -rf /var/lib/apt/lists/* /root/additional_ros_packages.txt &&\ 
    rm -rf /etc/apt/sources.list.d/ros1-latest.list

RUN pip install --extra-index-url https://rospypi.github.io/simple/ rospy && \
    pip install --extra-index-url https://rospypi.github.io/simple/ tf2_ros && \
    pip3 install -r /root/test_reqs.txt

#build ros packages
# RUN . /opt/ros/noetic/setup.bash && \ 
#     cd /root/smartenv/ && catkin_make

#install server packages
RUN cd /root/app/ && \ 
    eval "$(/root/.fnm/fnm env --use-on-cd --shell bash)" && \
    /root/.fnm/fnm  use 20 && \
    npm install 

#install client packages
RUN cd /root/app/dashboard && \
    eval "$(/root/.fnm/fnm env --use-on-cd --shell bash)" && \
    /root/.fnm/fnm use 20 && \ 
    npm install --force

#make entry script executable
RUN chmod +x /root/ros_entrypoint.sh

#install arduino-cli note: installs the latest version

RUN curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | BINDIR=/usr/bin sh


# Set the working directory
WORKDIR /root/rosenv/
# Set environment variables

# Set the entrypoint to the script
ENTRYPOINT ["/bin/bash", "/root/ros_entrypoint.sh"]

